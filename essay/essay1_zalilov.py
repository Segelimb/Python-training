print("Сочинение на тему: Арифметические операции в Python.")
print()
print("Сегодня на паре по основам программирования на Python я познакомился с простыми,")
print("но очень важными операциями, которые позволяют выполнять математические вычисления. ")
print()
print("Базовые арифметические операции в Python интуитивно понятны и похожи на обычную математику.")
print("Это сложение (+), вычитание (-), умножение (*) и деление (/).")
print("Например, команда print(10 + 5) выведет на экран число:", 10 + 5)
print("Вот еще один пример: print(10/5)", "команда выведет:", 10 / 2)
print("На этот раз команда вывела:", 10/2, "- число с плавующей запятой.")
print("Операция деления всегда возвращает число с плавующей запятой, данные типа:")
print(type(10 / 2))
print()
print("Но есть и особые операции. Целочисленное деление (//) отбрасывает дробную часть, оставляя только целую (Округляет всегда в меньшую сторону).")
print("Пример: print(11 // 2), команда выведет:", 11//2)
print("А операция взятия остатка от деления (%) бывает очень полезна, например, для проверки числа на чётность.")
print("Вот пример ее работы: команда print(5 % 2) выведет число:", 5 % 2)
print("Так же есть операция возведение в степень (**).")
print("Вот пример ее работы: команда print(6 ** 2) выведет:", 6**2)
print()
print("Особый интерес у меня вызвало понятие приоритета операций.")
print("Python, как и в математике, сначала выполняет умножение и деление, а потом сложение и вычитание.")
print("Чтобы изменить этот порядок, можно использовать круглые скобки: \"()\"")
print("Для примера: команда print(10 + 6 / 2) выведет:", 10 + 6 / 2)
print("А команда print((10 + 6) / 2) выведет:", (10 + 2) / 2)
print()
print("В заключение хочу сказать, что арифметические операции — это не простые команды.")
print("Это первый шаг к созданию полезных программ: от простого калькулятора до сложных алгоритмов, рассчитывающих траекторию полёта ракеты.")
print()